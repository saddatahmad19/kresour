# GoReleaser configuration for Kresour
# https://goreleaser.com/

# Project name and description
project_name: kresour
description: A Terminal User Interface (TUI) for navigating cybersecurity resources and tools organized by engagement phases

# Build configuration
builds:
  - id: kresour
    binary: kresour
    main: ./cmd/kresour
    goos:
      - linux
      - darwin
      - windows
    goarch:
      - amd64
      - arm64
    goarm:
      - 7
    ldflags:
      - -s -w
      - -X main.version={{.Version}}
      - -X main.commit={{.Commit}}
      - -X main.date={{.Date}}
      - -X main.builtBy=goreleaser
    env:
      - CGO_ENABLED=0

# Archive configuration
archives:
  - id: default
    name_template: >-
      {{ .ProjectName }}_
      {{- title .Os }}_
      {{- if eq .Arch "amd64" }}x86_64
      {{- else if eq .Arch "386" }}i386
      {{- else }}{{ .Arch }}{{ end }}
      {{- if .Arm }}v{{ .Arm }}{{ end }}
    format_overrides:
      - goos: windows
        format: zip
    files:
      - README.md
      - LICENSE
      - data/*.json
    format: tar.gz

# Checksums
checksum:
  name_template: 'checksums.txt'
  algorithm: sha256

# Snapshots
snapshot:
  name_template: "{{ incpatch .Version }}-next"

# Changelog
changelog:
  sort: asc
  filters:
    exclude:
      - '^docs:'
      - '^test:'
      - '^ci:'
      - '^build:'

# Release configuration
release:
  github:
    owner: saddatahmad19
    name: kresour
  draft: false
  prerelease: auto
  mode: replace
  name_template: '{{ .ProjectName }} {{ .Tag }}'
  header: |
    ## ðŸš€ What's Changed
    
    A Terminal User Interface (TUI) for navigating cybersecurity resources and tools organized by engagement phases.
    
    ### ðŸ“¦ Installation
    
    **One-line install (Recommended):**
    ```bash
    curl -sL https://raw.githubusercontent.com/saddatahmad19/kresour/main/install.sh | bash
    ```
    
    **Go install:**
    ```bash
    go install github.com/saddatahmad19/kresour/cmd/kresour@latest
    ```
    
    ### ðŸ”§ Manual Installation
    
    Download the appropriate binary for your platform:
    
    | Platform | Architecture | Download |
    |----------|-------------|----------|
    | Linux | x86_64 | `kresour_Linux_x86_64.tar.gz` |
    | Linux | ARM64 | `kresour_Linux_arm64.tar.gz` |
    | macOS | x86_64 | `kresour_Darwin_x86_64.tar.gz` |
    | macOS | ARM64 | `kresour_Darwin_arm64.tar.gz` |
    | Windows | x86_64 | `kresour_Windows_x86_64.zip` |
    
    ### ðŸ“‹ Full Changelog
    
  footer: |
    ---
    
    **Full Changelog**: https://github.com/saddatahmad19/kresour/compare/{{ .PreviousTag }}...{{ .Tag }}

# Homebrew (optional - for macOS users)
brews:
  - name: kresour
    tap:
      owner: saddatahmad19
      name: homebrew-tap
    folder: Formula
    description: A Terminal User Interface (TUI) for navigating cybersecurity resources and tools organized by engagement phases
    homepage: https://github.com/saddatahmad19/kresour
    license: MIT
    skip_upload: true  # Set to false when you have a homebrew tap
    test: |
      system "#{bin}/kresour --version"
    install: |
      bin.install "kresour"

# Scoop (optional - for Windows users)
scoops:
  - name: kresour
    bucket: kresour
    description: A Terminal User Interface (TUI) for navigating cybersecurity resources and tools organized by engagement phases
    homepage: https://github.com/saddatahmad19/kresour
    license: MIT
    skip_upload: true  # Set to false when you have a scoop bucket
    persist:
      - data

# Docker (optional)
dockers:
  - image_templates:
      - "saddatahmad19/kresour:{{ .Version }}"
      - "saddatahmad19/kresour:latest"
    dockerfile: Dockerfile
    skip_push: true  # Set to false when you want to push to Docker Hub
    use: buildx
    build_flag_templates:
      - --platform=linux/amd64
      - --platform=linux/arm64

# Universal binaries for macOS
universal_binaries:
  - replace: true

# Metadata
metadata:
  mod_timestamp: "{{ .CommitTimestamp }}"
